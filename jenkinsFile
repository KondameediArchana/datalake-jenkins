pipeline {
    agent any

    environment {
        // Set up any necessary environment variables
        APP_DIR = 'datalake-jenkins'
        PIP_PATH = 'C:\\Users\\archana.kondameedhi\\AppData\\Local\\Microsoft\\WindowsApps\\pip.exe' 
        GIT_CREDENTIALS = credentials('giteasecret')
        DOCKER_USERNAME = credentials('jfrogusername')
        DOCKER_PASSWORD = credentials('jfrogpassword')
        SCANNER_HOME = tool 'sonarscanner'
    
    }

    stages {
        stage('Clone Repository') {
            steps {
                
                git credentialsId: "giteakey", url: 'git@192.168.61.88:Toucan_Payments_India/DataLake.git'

            }
        }

       
        stage('login to jfrog registry') {
            steps {
                script {
                    bat 'docker login --username=admin --password=Dev@p$123 artifacts.toucanint.com'
                }
            }
        }
        stage('Build image to jfrog') {
            steps {
                script {
                    dir('api-server') {
                        bat 'docker build -t artifacts.toucanint.com/datalake/apiserver_image:latest .'
                        bat 'docker push artifacts.toucanint.com/datalake/apiserver_image:latest '
                        bat 'docker rmi -f artifacts.toucanint.com/datalake/apiserver_image:latest || true'
                    }
                }
            }
        }
        stage('Run Test Cases') {
            steps {
                script {
                    dir('api-server') {
                        // Ensure you have pytest installed
                        bat 'C:\\Users\\archana.kondameedhi\\AppData\\Local\\Programs\\Python\\Python312\\Scripts\\pip.exe install pytest'
                        
                        // Run pytest and generate a report
                        bat 'C:\\Users\\archana.kondameedhi\\AppData\\Local\\Programs\\Python\\Python312\\Scripts\\pytest.exe --maxfail=1 --disable-warnings -q --junitxml=test-results/results.xml'
                    }
                }
            }
        }
        stage('Test Cases') {
            steps {
                script {
                    bat 'pytest tests/'
                }
            }
        }
    } 
}
